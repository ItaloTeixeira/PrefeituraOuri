// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ouri.Repository;

namespace Ouri.Repository.Migrations
{
    [DbContext(typeof(OuriContext))]
    [Migration("20190304124826_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Ouri.Domain.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cidade");

                    b.Property<string>("Diretor");

                    b.Property<string>("Nome");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("Ouri.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Ouri.Domain.ProfessorEscola", b =>
                {
                    b.Property<int>("EscolaId");

                    b.Property<int>("ProfessorId");

                    b.HasKey("EscolaId", "ProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessoresEscolas");
                });

            modelBuilder.Entity("Ouri.Domain.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo");

                    b.Property<int?>("EscolaId");

                    b.Property<int?>("ProfessorId");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Ouri.Domain.ProfessorEscola", b =>
                {
                    b.HasOne("Ouri.Domain.Escola", "Escola")
                        .WithMany("ProfessoresEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ouri.Domain.Professor", "Professor")
                        .WithMany("ProfessoresEscolas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ouri.Domain.Turma", b =>
                {
                    b.HasOne("Ouri.Domain.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaId");

                    b.HasOne("Ouri.Domain.Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorId");
                });
#pragma warning restore 612, 618
        }
    }
}
